
class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        
        prev = None
        temp = head
        
        count = 0
        while temp:
            count += 1 
            temp = temp.next
        
        if k <= 1 or count < k:
            return head
        
        prev, curr = None, head
        
        for _ in range(k):
            nex = curr.next
            curr.next = prev
            prev = curr
            curr = nex
        
        head.next = self.reverseKGroup(curr, k)
            
        return prev
